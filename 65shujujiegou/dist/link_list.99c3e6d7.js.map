{"mappings":"AACA,MAAM,UAAU,GAAG,CAAC,KAAK,GAAG;IACxB,OAAO,UAAU,CAAC,KAAK,CAAC,CAAA;CAC3B;AAED,MAAM,UAAU,GAAG,CAAC,IAAI,EAAC,KAAK,GAAG;IAC7B,MAAM,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC;IACjC,IAAI,KAAK,GAAG,IAAI;IAChB,MAAM,KAAK,CAAC,IAAI,CACZ,KAAK,GAAG,KAAK,CAAC,IAAI;IAEtB,KAAK,CAAC,IAAI,GAAG,OAAO;IACpB,OAAO,OAAO,CAAA;CACjB;AAED,MAAM,UAAU,GAAG,CAAC,KAAK,GAAG;IACxB,OAAO;QACH,IAAI,EAAG,KAAK;QACZ,IAAI,EAAG,IAAI;KACd,CAAA;CACJ;AAED,MAAM,UAAU,GAAG,CAAC,KAAI,EAAC,IAAI,GAAG;IAC5B,oCAAgB;IAChB,IAAI,SAAS,GAAI,IAAI;IACrB,IAAI,KAAK,GAAG,KAAI;IAChB,MAAM,KAAK,KAAK,IAAI,CAAC;QACjB,SAAS,GAAG,KAAK;QACjB,KAAK,GAAG,KAAK,CAAC,IAAI;KAErB;IACD,IAAG,SAAS,EACR,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;SAE1B,KAAI,GAAG,IAAI,CAAC,IAAI;IAGpB,OAAO,KAAI,CAAA;CACd;AAED,MAAM,UAAU,GAAG,CAAC,KAAI,EAAC,EAAE,GAAG;IAC1B,IAAI,IAAI,GAAG,KAAI;IACf,MAAM,IAAI,CAAC;QACP,EAAE,CAAC,IAAI,CAAC;QACR,IAAI,GAAG,IAAI,CAAC,IAAI;KACnB;CACJ;AAGD,IAAI,IAAI,GAAG,UAAU,CAAC,EAAE,CAAC;AACzB,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,EAAC,EAAE,CAAC;AACjC,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,EAAC,EAAE,CAAC;AAEjC,gCAAgC;AAChC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAC,IAAI,CAAC;AACzB,UAAU,CAAC,IAAI,EAAC,CAAC,IAAI,GAAG;IACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;CACzB,CAAC","sources":["link_list/src/main.js"],"sourcesContent":["\r\nconst createList = (value)=>{\r\n    return createNode(value)\r\n}\r\n\r\nconst appendList = (node,value)=>{\r\n    const newNode = createNode(value)\r\n    let nodes = node\r\n    while(nodes.next){\r\n        nodes = nodes.next\r\n    }\r\n    nodes.next = newNode\r\n    return newNode\r\n}\r\n\r\nconst createNode = (value)=>{\r\n    return {\r\n        data : value ,\r\n        next : null\r\n    }\r\n}\r\n\r\nconst removeNode = (list,node)=>{\r\n    //如果list是第一个节点呢？\r\n    let lastNodes =  null\r\n    let nodes = list\r\n    while(nodes !== node){\r\n        lastNodes = nodes\r\n        nodes = nodes.next\r\n        \r\n    }\r\n    if(lastNodes){\r\n        lastNodes.next = node.next\r\n    }else{\r\n        list = node.next\r\n    \r\n    }\r\n    return list\r\n}   \r\n\r\nconst travelList = (list,fn)=>{\r\n    let node = list\r\n    while(node){\r\n        fn(node)\r\n        node = node.next\r\n    }\r\n}\r\n\r\n\r\nlet list = createList(10)\r\nconst node2 = appendList(list,20)\r\nconst node3 = appendList(list,30)\r\n\r\n// list = removeNode(list,node2)\r\nconsole.log(`list:`,list)\r\ntravelList(list,(node)=>{\r\n    console.log(node.data)\r\n})\r\n\r\n"],"names":[],"version":3,"file":"link_list.99c3e6d7.js.map","sourceRoot":"/__parcel_source_root/"}