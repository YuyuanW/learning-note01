{"mappings":"AACA,MAAM,CAAC,MAAM,GAAG,SAAS,eAAe,EAAC;IACrC,IAAI,QAAQ;IACZ,IAAG,OAAO,eAAe,KAAK,QAAQ,EAClC,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,eAAe,CAAC;SACnD,IAAG,eAAe,YAAY,KAAK,EAAE,QAAQ,GAAG,eAAe;IACrE,4BAAoB;IACZ,aAAK;IACb,OAAO;QACH,OAAO,EAAG,eAAe,CAAC,OAAO;QACjC,QAAQ,EAAC,SAAS,EAAC;YACf,IAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAE,CAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC;YACvE,OAAO,IAAI,CAAC,iBAAiB;aAAlB;SACd;QACD,IAAI,EAAC,QAAQ,EAAC;YACV,IAAI,KAAK,GAAG,EAAE;YACd,IAAI,IAAI,CAAC,GAAC,CAAC,EAAG,CAAC,GAAC,QAAQ,CAAC,MAAM,EAAG,CAAC,EAAE,CACjC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxE,mHAA2D;YACP,KAAnD,CAAC,OAAO,GAAG,IAAI;YACpB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,4CAAoB;aAArB;QACI,+BAAO;QAC/B,gBAAgB;QAChB,iMAAiF;SAC4B;QACjH,GAAG,IAAE;YACD,OAAO,IAAI,CAAC,OAAO,CAAA;SACtB;QACD,IAAI,EAAC,EAAE,EAAC;YACJ,IAAI,IAAI,CAAC,GAAC,CAAC,EAAG,CAAC,GAAC,QAAQ,CAAC,MAAM,EAAG,CAAC,EAAE,CACjC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAC,QAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;YAE/B,OAAO,IAAI,CAAA;SACd;QACD,MAAM,IAAE;YACJ,MAAM,KAAK,GAAG,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG;gBACd,IAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EACxC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;aAAE,CAAC,CAAC,wBAAgB;;YAC3C,OAAD,MAAM,CAAC,KAAK,CAAC,CAAA;SACvB;QACD,QAAQ,IAAE;YACN,MAAM,KAAK,GAAG,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG;gBAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC;aAAC,CAAC;YACjD,gCAA4B;YACxB,+EAA6D;YACjE,OAAO,MAAM,CAAC,KAAK,CAAC,CAAA;SACvB;QACD,KAAK,IAAE;YACH,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;SACxB;KACJ,CAAA,YAAY;KAAZ;CACJ","sources":["src/jquery.js"],"sourcesContent":["\r\nwindow.jQuery = function(selectorOrArray){\r\n    let elements\r\n    if(typeof selectorOrArray === 'string'){\r\n        elements = document.querySelectorAll(selectorOrArray)\r\n    }else if(selectorOrArray instanceof Array){elements = selectorOrArray}\r\n    // api 可以操作 elements\r\n    //const api =\r\n    return {\r\n        lastApi : selectorOrArray.lastApi,\r\n        addClass(className){ //闭包，函数访问外部变量\r\n            for(let i=0;i<elements.length;i++){elements[i].classList.add(className)}  \r\n            return this //return api     \r\n        },\r\n        find(selector){\r\n            let array = []\r\n            for(let i=0 ; i<elements.length ; i++){\r\n                array = array.concat(Array.from(elements[i].querySelectorAll(selector)))} \r\n                //NodeList是伪数组，进行concat会将伪数组作为一个整体拼起来到array上，所以需要Array.from\r\n            array.lastApi = this\r\n            return jQuery(array) //这里newApi改变了操作的节点层级\r\n            // const newApi = jQuery(array)\r\n            // return newApi\r\n            //如果我要实现链式操作，我需要返回一个api，array是一个数组。所以，创建一个api，通过jQuery；jQuery要可以接受数组，那么一开始就要做一个判断\r\n        },\r\n        end(){\r\n            return this.lastApi\r\n        },\r\n        each(fn){ //封装一个函数去遍历element里的参数\r\n            for(let i=0 ; i<elements.length ; i++){\r\n                fn.call(null,elements[i],i)\r\n            }\r\n            return this\r\n        },\r\n        parent(){\r\n            const array = []\r\n            this.each((node)=>{\r\n                if(array.indexOf(node.parentNode) === -1){\r\n                array.push(node.parentNode)}}) //each会有一个return\r\n            return jQuery(array)\r\n        },\r\n        children(){\r\n            const array = []\r\n            this.each((node)=>{array.push(...node.children)}) \r\n            //children返回HTMLCollection  \r\n            // ...node.children === node.children[0],node.children[1]…… 展开操作符\r\n            return jQuery(array)\r\n        },\r\n        print(){\r\n            console.log(elements)\r\n        },\r\n    }//return api\r\n}"],"names":[],"version":3,"file":"index.3e2f9b55.js.map","sourceRoot":"/__parcel_source_root/"}